#!/bin/bash

# Find changes in (real) files of dir1 ... dir2
# function taken from saveconfig
system_findchanged(){
	if [ -d "$1" ]; then
		for i in $( cd "$1"; find . -type f | sed 's,^\./,,g' | grep -v ' ' ); do
			cmp -s "$1/$i" "$2/$i" || echo "$1/$i"
		done
	elif [ -e "$1" ]; then
			cmp -s "$1" "$2" || echo "$1"
	fi
}

#
# Needed for all modes that feature nohwsetup.
#

system_add_hd_autoconfig()
{
	echo "SYSTEM_TYPE=$SYSTEM_TYPE" >> $TARGET_MNT_POINT/etc/default/knoppix
	echo "SYSTEM_HW_PROFILE=yes" >> $TARGET_MNT_POINT/etc/default/knoppix
	
	# TODO: :-)
	[ ! -r /etc/init.d/knoppix-hd-autoconfig -a -x tools/knoppix-hd-autoconfig ] && cp -f tools/knoppix-hd-autoconfig $TARGET_MNT_POINT/etc/init.d/

	chroot_it update-rc.d -f knoppix-autoconfig remove . 2>/dev/null >/dev/null
	[ "$SYSTEM_TYPE" = "beginner" ] && chroot_it update-rc.d knoppix-hd-autoconfig start 00 S . >/dev/null

	# TODO: Remove the hacks
	perl -pi -e 's/rebuildfstab -r -u knoppix -g knoppix/[ -d \/KNOPPIX ] && rebuildfstab -r -u knoppix -g knoppix || rebuildfstab -r/g'  $TARGET_MNT_POINT/sbin/hotplug-knoppix
	perl -pi -e 's/rebuildfstab -r -u knoppix -g knoppix/[ -d \/KNOPPIX ] && rebuildfstab -r -u knoppix -g knoppix >\/dev\/null 2>\/dev\/null || rebuildfstab -r/g'  $TARGET_MNT_POINT/etc/init.d/knoppix-autoconfig

	# TODO: Really _fix_ it:
	perl -pi -e 's/ReadOnly=1/ReadOnly=0/g'  $TARGET_MNT_POINT/usr/bin/mkdesktophdicons
	perl -pi -e 's/uid=knoppix,gid=knoppix,//g' $TARGET_MNT_POINT/etc/automount.sh

	mount --bind /proc $TARGET_MNT_POINT/proc
	chroot "$TARGET_MNT_POINT" su $USER_NAME -c mkdesktophdicons
	umount $TARGET_MNT_POINT/proc
}

system_add_hd_config()
{
	# TODO: :-)
	[ ! -r /etc/init.d/knoppix-hd-config -a -x tools/knoppix-hd-config ] && cp -f tools/knoppix-hd-config $TARGET_MNT_POINT/etc/init.d/

	DEFAULT_CONFIG_DIR=$TARGET_MNT_POINT/etc/knoppix

	mkdir -p $DEFAULT_CONFIG_DIR/etc/network/
	
	save_config $DEFAULT_CONFIG_DIR/install-configuration
	chmod 600 $DEFAULT_CONFIG_DIR/install-configuration

	cp -af /$DEFAULT_DIR/etc/network/interfaces $DEFAULT_CONFIG_DIR/etc/network/
	cp -af /$DEFAULT_DIR/etc/pcmcia $DEFAULT_CONFIG_DIR/etc/
	cp -af /$DEFAULT_DIR/etc/cups $DEFAULT_CONFIG_DIR/etc/

	chroot_it update-rc.d knoppix-hd-config start 01 S . >/dev/null
}

system_copy_etc()
{
	update_status $"Copying custom configuration ..."
	
	# copy changed files in /etc
	( cd $TARGET_MNT_POINT; system_findchanged /etc /KNOPPIX/etc | egrep -v "fstab|passwd|shadow|group" | tar -T - -cf - | tar xf -) 2>/dev/null

	# TODO: Add support for installing nvidia drivers here if they are there
	# install_nvidia_drivers
	# For now we will just use the old one ...
	[ -r /etc/X11/XF86Config-4.1st ] && mv -f $TARGET_MNT_POINT/etc/X11/XF86Config-4.1st $TARGET_MNT_POINT/etc/X11/XF86Config-4

	# Rename XF86Config-4 to xorg.conf when Xorg is used and activate xorg-common
	if [ -x /usr/X11R6/bin/Xorg ]; then
		mv $TARGET_MNT_POINT/etc/X11/XF86Config-4 $TARGET_MNT_POINT/etc/X11/xorg.conf
		[ -x /etc/init.d/xorg-common ] && chroot_it update-rc.d xorg-common start 70 S . >/dev/null
		[ -x /etc/init.d/x-common ]    && chroot_it update-rc.d x-common    start 70 S . >/dev/null
		[ -x /etc/init.d/x11-common ]  && chroot_it update-rc.d x11-common  start 70 S . >/dev/null
	fi

  	# Save ALSA sound volume

	[ -e /proc/asound/modules -a -x /usr/sbin/alsactl ] && /usr/sbin/alsactl store
	
	# Copy volume setting

	[ -f /var/lib/alsa/asound.state ] && cp /var/lib/alsa/asound.state $TARGET_MNT_POINT/var/lib/alsa

	# TODO: Remove hack from here
	perl -pi -e "s/insmod/modprobe/g" $TARGET_MNT_POINT/etc/init.d/knoppix-autoconfig
	[ -e $TARGET_MNT_POINT/etc/default/kde-services-knoppix ] && perl -pi -e 's/^#//g' $TARGET_MNT_POINT/etc/default/kde-services-knoppix
	[ -e $TARGET_MNT_POINT/etc/default/kde-services-kanotix ] && perl -pi -e 's/^#//g' $TARGET_MNT_POINT/etc/default/kde-services-kanotix
	# TODO: Send hacks to Klaus ...
	perl -pi -e 's/^CMDLINE=/[ -z "\$CMDLINE" ] && CMDLINE=/g' $TARGET_MNT_POINT/etc/init.d/knoppix-autoconfig
	perl -pi -e 's/modutils/modutils-knoppix/g' $TARGET_MNT_POINT/etc/init.d/knoppix-autoconfig
	perl -pi -e 's/if grep -q /if egrep -q/g' $TARGET_MNT_POINT/etc/init.d/knoppix-autoconfig
	# TODO: :-)
	[ ! -r /etc/init.d/modutils-knoppix -a -x tools/modutils-knoppix ] && cp -f tools/modutils-knoppix $TARGET_MNT_POINT/etc/init.d/
	
	# Add dpi setting from cheatcode to hd install

	[ ! -e /etc/sysconfig/base ] && [ -e /etc/sysconfig/knoppix ] && source /etc/sysconfig/knoppix
	[ -e /etc/sysconfig/base ] && source /etc/sysconfig/base
	[ -z "$CUSTOM_DPI" ] && CUSTOM_DPI=72
	if [ "$CUSTOM_DPI" != "auto" -a "$CUSTOM_DPI" ]; then
		[ -e $TARGET_MNT_POINT/etc/kde3/kdm/Xservers ] && perl -pi -e "s|(/usr/X11R6/bin/X -nolisten tcp).*|\1 -dpi $CUSTOM_DPI -br|" $TARGET_MNT_POINT/etc/kde3/kdm/Xservers
		[ -e $TARGET_MNT_POINT/etc/kde3/kdm/kdmrc ]    && perl -pi -e "s|(ServerArgsLocal=-nolisten tcp).*|\1 -dpi $CUSTOM_DPI -br|"  $TARGET_MNT_POINT/etc/kde3/kdm/kdmrc
	else
		[ -e $TARGET_MNT_POINT/etc/kde3/kdm/Xservers ] && perl -pi -e "s|(/usr/X11R6/bin/X -nolisten tcp).*|\1 -br|"                  $TARGET_MNT_POINT/etc/kde3/kdm/Xservers
		[ -e $TARGET_MNT_POINT/etc/kde3/kdm/kdmrc ]    && perl -pi -e "s|(ServerArgsLocal=-nolisten tcp).*|\1 -br|"                   $TARGET_MNT_POINT/etc/kde3/kdm/kdmrc
	fi
}

system_copy_home()
{
	update_status $"Copying home directory ..."
	
	#copy home directory from running user

	#check if already data is there then stop
	if [ -d $TARGET_MNT_POINT/home/$USER_NAME ]; then
		chroot "$TARGET_MNT_POINT" chown -R $USER_NAME:$USER_NAME /home/$USER_NAME
		return 0
	fi

	if [ -d "/home/$DEFAULT_USER/.kde" ]; then
		rm -rf $TARGET_MNT_POINT/home/$DEFAULT_USER
		cp -a /home/$DEFAULT_USER $TARGET_MNT_POINT/home
		[ "$USER_NAME" != "$DEFAULT_USER" ] && mv $TARGET_MNT_POINT/home/$DEFAULT_USER $TARGET_MNT_POINT/home/$USER_NAME
	else
		cp -a $TARGET_MNT_POINT/etc/skel $TARGET_MNT_POINT/home
		mv $TARGET_MNT_POINT/home/skel $TARGET_MNT_POINT/home/$USER_NAME
	fi

	chroot "$TARGET_MNT_POINT" chown -R $USER_NAME:$USER_NAME /home/$USER_NAME

	mount --bind /proc $TARGET_MNT_POINT/proc
	chroot "$TARGET_MNT_POINT" su $USER_NAME -c mkdesktophdicons
	umount $TARGET_MNT_POINT/proc

	# --- Added by Joerg Schirottke (modified by Fabian Franz)

	# LOKALE ANPASSUNGEN

	# Remove autostart scripts

	rm -f $TARGET_MNT_POINT/home/$USER_NAME/.kde/Autostart/showindex.desktop
	rm -f $TARGET_MNT_POINT/home/$USER_NAME/.kde/Autostart/sorticons.desktop

	# Fix background

	if [ "$INSTALL_KANO" = "no" ]; then
		[ -e $DEFAULT_DIR/usr/local/lib/knoppix.jpg ] && perl -pi -e "s|/cdrom/$DEFAULT_DIR/background.jpg|/usr/local/lib/knoppix.jpg|" $TARGET_MNT_POINT/home/$USER_NAME/.kde/share/config/kdesktoprc
		[ -e $DEFAULT_DIR/usr/local/lib/knoppix.png ] && perl -pi -e "s|/cdrom/$DEFAULT_DIR/background.png|/usr/local/lib/knoppix.png|" $TARGET_MNT_POINT/home/$USER_NAME/.kde/share/config/kdesktoprc
	else
		[ -e $DEFAULT_DIR/usr/local/lib/kanotix.jpg ] && perl -pi -e "s|/cdrom/$DEFAULT_DIR/background.jpg|/usr/local/lib/kanotix.jpg|" $TARGET_MNT_POINT/home/$USER_NAME/.kde/share/config/kdesktoprc
		[ -e $DEFAULT_DIR/usr/local/lib/kanotix.png ] && perl -pi -e "s|/cdrom/$DEFAULT_DIR/background.png|/usr/local/lib/kanotix.png|" $TARGET_MNT_POINT/home/$USER_NAME/.kde/share/config/kdesktoprc
	fi

	# Remove Netscape Directories
	
	rm -rf $TARGET_MNT_POINT/home/$USER_NAME/.netscape*

	# Remove KNOPPIX/KANOTIX Firewall

	rm -f $TARGET_MNT_POINT/home/$USER_NAME/Desktop/firewall-knoppix.desktop
	rm -f $TARGET_MNT_POINT/home/$USER_NAME/Desktop/firewall-kanotix.desktop
	rm -f $TARGET_MNT_POINT/etc/skel/Desktop/firewall-kanotix.desktop
	rm -f $TARGET_MNT_POINT/etc/skel/Desktop/firewall-knoppix.desktop

	# Mozilla Konfigdateien korrigieren

	if [ "$USER_NAME" != "$DEFAULT_USER" ];	then
		rm -f $TARGET_MNT_POINT/home/$USER_NAME/.mozilla/appreg
		rm -f $TARGET_MNT_POINT/home/$USER_NAME/.mozilla/pluginreg.dat
		# TODO: Test if symlink works ...
		if [ -e $TARGET_MNT_POINT/home/$USER_NAME/.mozilla/$DEFAULT_USER ]; then
			[ -e $TARGET_MNT_POINT/home/$USER_NAME/.mozilla/default ] || mv $TARGET_MNT_POINT/home/$USER_NAME/.mozilla/$DEFAULT_USER $TARGET_MNT_POINT/home/$USER_NAME/.mozilla/default
			perl -pi -e 's/.*general.useragent.*\n?//' $TARGET_MNT_POINT/home/$USER_NAME/.mozilla/default/*/prefs.js
		fi

		# Bei unterschiedlichem OLD/NEWHOME muss man die Pfade anpassen, sonst funktionieren die Anwendungen nicht korrekt

		OLDHOME="/home/$DEFAULT_USER"
		NEWHOME="/home/$USER_NAME"
		PART="$TARGET_MNT_POINT"
		for f in $(find "$PART$NEWHOME" -exec grep -ls "$OLDHOME" {} \;|grep -v $0); do
			perl -pi -e "s|$OLDHOME|$NEWHOME|g" "$f"
		done
	fi

	# Neue Symbole für KANOTIX und KNOPPIX auf dem Desktop

	[ -e $TARGET_MNT_POINT/home/$USER_NAME/Desktop/KANOTIX.desktop ] && cat >$TARGET_MNT_POINT/home/$USER_NAME/Desktop/KANOTIX.desktop <<EOF
[Desktop Entry]
Name=KANOTIX
# Exec=kfmclient openProfile webbrowsing http://kanotix.com/
Exec=konqueror --geometry 800x600+110+40 http://kanotix.com/
Type=Application
Icon=html
Terminal=0
EOF

	[ -e $TARGET_MNT_POINT/home/$USER_NAME/Desktop/KNOPPIX.desktop ] && cat >$TARGET_MNT_POINT/home/$USER_NAME/Desktop/KNOPPIX.desktop <<EOF
[Desktop Entry]
Name=KNOPPIX
# Exec=kfmclient openProfile webbrowsing http://knoppix.com/
Exec=konqueror --geometry 800x600+110+40 http://knoppix.com/
Type=Application
Icon=html
Terminal=0
EOF

}

system_setup_kdm()
{
	# backup Knoppix specific Xsession file
	mv $TARGET_MNT_POINT/etc/X11/Xsession.d/45xsession $TARGET_MNT_POINT/root/xsession.knx-hdinstall.backup

	# Make the system insecure ? Never! (FF)
	
	# fix display permissions for xdm/kdm (bug in woody?)
	#sed -e 's,DisplayManager\*authorize:.*true,DisplayManager*authorize: false,g' /etc/X11/xdm/xdm-config >$TARGET_MNT_POINT/etc/X11/xdm/xdm-config
	#for x in /etc/kde[23]/kdm/kdmrc; do
	#	perl -pi -e 's,#Authorize=false,Authorize=false,g' $TARGET_MNT_POINT/$x
	#done

	# force kde first time configuration
	if [ -f /etc/skel/.kde/share/config/kpersonalizerrc ]; then
		perl -pi -e 's/FirstLogin=false/FirstLogin=true/g' $TARGET_MNT_POINT/etc/skel/.kde/share/config/kpersonalizerrc

		# The users kde should be perfect, unless we just copied from template ...
		[ ! -d "/home/$DEFAULT_USER/.kde" ] && perl -pi -e 's/FirstLogin=false/FirstLogin=true/g' $TARGET_MNT_POINT/home/$USER_NAME/.kde/share/config/kpersonalizerrc
	fi

	# Add kde3 to .wmrc
	[ ! -r $TARGET_MNT_POINT/home/$USER_NAME/.wmrc ] && echo "kde3" > $TARGET_MNT_POINT/home/$USER_NAME/.wmrc

	# Start kdm in runlevel 5
	chroot_it update-rc.d kdm start 99 5 . >/dev/null  
}

system_install_templates()
{
	TEMPLATE_PATH=""
	[ -d $SEARCHPATH/templates ] && TEMPLATE_PATH=$SEARCHPATH/templates
	if [ -n "$TEMPLATE_PATH" ]; then 
		# change prompt (/etc/profile)
		cp -af $TEMPLATE_PATH/etc/profile $TARGET_MNT_POINT/etc/profile

		# "normalize" /etc/inittab
		cp -af $TEMPLATE_PATH/etc/inittab $TARGET_MNT_POINT/etc/inittab
	
		# change /etc/inputrc to 8-bit clean input
		# why ?
		#cp -af $TEMPLATE_PATH/etc/inputrc $TARGET_MNT_POINT/etc/inputrc
	
		# remove Knoppix entry from /etc/sudoers
		cp -af $TEMPLATE_PATH/etc/sudoers $TARGET_MNT_POINT/etc/sudoers
		chown root:root $TARGET_MNT_POINT/etc/sudoers
		chmod 0440 $TARGET_MNT_POINT/etc/sudoers

		# use less restrictive /etc/hosts.allow
		cp -af $TEMPLATE_PATH/etc/hosts.allow $TARGET_MNT_POINT/etc/hosts.allow
	else
		echo $"Warning: Templates could not be found. Not updating: profile, inittab, sudoers, hosts.allow!" 1>&2
	fi
	
	# disable all services in /etc/inetd.conf
	chroot_it update-inetd --multi --disable '*'
}

# These are additional services that can be used with _all_ modes.
system_add_services()
{
	# FCDSL Anpassung
	[ -e /etc/rc0.d/K15isdnactivecards ] &&	chroot_it update-rc.d isdnactivecards defaults 13 15 >/dev/null
	[ -e /etc/rc0.d/K21capiutils ] &&	chroot_it update-rc.d capiutils defaults 13 21 >/dev/null

	# ALSA aktivieren, wenn möglich
	if [ -e /proc/asound/modules ]; then
		if [ -x /etc/init.d/alsa-utils ]; then
			chroot_it update-rc.d alsa-utils defaults
		elif [ -x /etc/init.d/alsa ]; then
			chroot_it update-rc.d alsa defaults
		fi
	fi

	[ -x /etc/init.d/cupsys ] &&  chroot_it update-rc.d cupsys defaults 2>/dev/null >/dev/null
	
	[ -x /etc/init.d/mountall.sh ] &&  chroot_it update-rc.d mountall.sh start 35 S . 2>/dev/null >/dev/null

	if [ "$INSTALL_KANO" = "no" ]; then
		# Set packages to hold/ prevent KDE update (Knoppix only):
		echo "kdelibs4-dev hold"  | chroot_it dpkg --set-selections
		echo "libqt3-mt-dev hold" | chroot_it dpkg --set-selections
		echo "libxft2-dev hold"   | chroot_it dpkg --set-selections
	else
		# XXX: well, we only need the old version for live purposes
		echo "eject install"      | chroot_it dpkg --set-selections
		
		# disable portmap
		chroot_it update-rc.d -f portmap remove &>/dev/null

		# start powernowd
		pidof powernowd &> /dev/null && chroot_it update-rc.d powernowd defaults &>/dev/null
		
		# start sl-modem-daemon
		pidof slmodemd &> /dev/null && chroot_it update-rc.d sl-modem-daemon defaults &>/dev/null
		
		# configure /etc/kernel-pkg.conf
		[ -f "$TARGET_MNT_POINT/etc/kernel-pkg.conf" ] && \
			perl -pi -e "s/^maintainer.*\=.*/maintainer \:\= $NAME_NAME/;s/^email.*\=.*/email \:\= $USER_NAME\@$HOST_NAME\.local/" "$TARGET_MNT_POINT/etc/kernel-pkg.conf"
		
		# enable KDE sounds
		rm -f "$TARGET_MNT_POINT/home/$USER_NAME/.kde/share/config/knotifyrc"
		# create ssh keys
		#[ -e "$TARGET_MNT_POINT/etc/ssh/ssh_host_key" ] || ssh-keygen -q -t rsa1 -f "$TARGET_MNT_POINT/etc/ssh/ssh_host_key" -C '' -N ''
		[ -e "$TARGET_MNT_POINT/etc/ssh/ssh_host_rsa_key" ] || ssh-keygen -q -t rsa -f "$TARGET_MNT_POINT/etc/ssh/ssh_host_rsa_key" -C '' -N ''
		[ -e "$TARGET_MNT_POINT/etc/ssh/ssh_host_dsa_key" ] || ssh-keygen -q -t dsa -f "$TARGET_MNT_POINT/etc/ssh/ssh_host_dsa_key" -C '' -N ''

		# remove live- only packages
		chroot_it dpkg --purge knxinstaller		&> /dev/null
		chroot_it dpkg --purge knx-installer		&> /dev/null
		chroot_it dpkg --purge saveconfig-kanotix	&> /dev/null
		chroot_it dpkg --purge firewall-kanotix		&> /dev/null	# think about it...

		if [ "$SYSTEM_TYPE" = "debian" ]; then
			chroot_it dpkg --purge initscripts-kanotix-live		&> /dev/null
			chroot_it dpkg --purge initscripts-kanotix		&> /dev/null
			chroot_it dpkg --purge sudoers-kanotix			&> /dev/null
			chroot_it dpkg --purge kanotix-splash			&> /dev/null
			chroot_it dpkg --purge kanotix-splash-utils		&> /dev/null
			chroot_it dpkg --purge mkpersistenthome-kanotix		&> /dev/null
			chroot_it dpkg --purge startsyslog-kanotix		&> /dev/null
			chroot_it dpkg --purge restartx-kanotix			&> /dev/null
			chroot_it dpkg --purge xsession-initscript-kanotix	&> /dev/null
			chroot_it dpkg --purge xsession-kanotix			&> /dev/null
			chroot_it dpkg --purge xf86config-kanotix		&> /dev/null
			#chroot_it dpkg --purge checkmem-kanotix			&> /dev/null	# under evaluation
			chroot_it dpkg --purge kde-services-kanotix		&> /dev/null
			chroot_it dpkg --purge sambastart-kanotix		&> /dev/null
			chroot_it dpkg --purge kanotix-setpassword		&> /dev/null
			chroot_it dpkg --purge mkdosswapfile-kanotix		&> /dev/null
			chroot_it dpkg --purge kanotix-remountrw		&> /dev/null
			
			#  disable live config
			[ -f "$TARGET_MNT_POINT/etc/default/distro" ] && \
				perl -pi -e "s/^FLL_DISTRO_MODE\=.*/FLL_DISTRO_MODE\=\"installed\"/" "$TARGET_MNT_POINT/etc/default/distro"
		fi

		# enable udev, if installed
		if [ -x /etc/init.d/udev ]; then
			chroot_it dpkg --purge automount-kanotix		&> /dev/null
			chroot_it dpkg --purge autofs				&> /dev/null
			chroot_it dpkg --purge hotplug-kanotix			&> /dev/null	
			chroot_it dpkg --purge mkdesktophdicons-kanotix		&> /dev/null
			chroot_it dpkg --purge fix-cdrom			&> /dev/null
			rm -f "$TARGET_MNT_POINT/home/$USER_NAME/Desktop"/[sh]d[a-z][1-9]
			rm -f "$TARGET_MNT_POINT/home/$USER_NAME/Desktop"/[sh]d[a-z][1-9][0-9]
			rm -f "$TARGET_MNT_POINT/home/$USER_NAME/Desktop"/CD-ROM\ \[cdrom\]
			rm -f "$TARGET_MNT_POINT/home/$USER_NAME/Desktop"/CD-ROM\ \[cdrom[1-9]\]
			rm -f "$TARGET_MNT_POINT/home/$USER_NAME/Desktop"/Floppy
			rm -f "$TARGET_MNT_POINT/etc/skel/Desktop"/Floppy
			
			mkdir -p "$TARGET_MNT_POINT/etc/skel/.kde/share/config" \
				 "$TARGET_MNT_POINT/home/$USER_NAME/.kde/share/config"
			touch "$TARGET_MNT_POINT/etc/skel/.kde/share/config/kdesktoprc"
			awk '/^\[Media\]/ { f = 1; next } /^\[.+\]/ { f = 0 } ! f' "$TARGET_MNT_POINT/etc/skel/.kde/share/config/kdesktoprc" \
				> "$TARGET_MNT_POINT/home/$USER_NAME/.kde/share/config/kdesktoprc"
			cat << EOF >> "$TARGET_MNT_POINT/home/$USER_NAME/.kde/share/config/kdesktoprc"
[Media]
enabled=true
exclude=media/hdd_unmounted
EOF
			cat "$TARGET_MNT_POINT/home/$USER_NAME/.kde/share/config/kdesktoprc" \
				> "$TARGET_MNT_POINT/etc/skel/.kde/share/config/kdesktoprc"

			# fix ownership
			chroot_it chown -R "$USER_NAME":"$USER_NAME" "$TARGET_MNT_POINT/home/$USER_NAME/.kde"
		fi
	fi
	
	# remove temporary kde- user files
	rm -f "$TARGET_MNT_POINT/home/$USER_NAME/.DCOPserver_*_*"
	rm -f "$TARGET_MNT_POINT/home/$USER_NAME/.kde/cache-*"
	rm -f "$TARGET_MNT_POINT/home/$USER_NAME/.kde/socket-*"
	rm -f "$TARGET_MNT_POINT/home/$USER_NAME/.kde/tmp-*"
	rm -f "$TARGET_MNT_POINT/home/$USER_NAME/.*uthority"
}

system_services()
{
	SYSTEM_SERVICES_D="sysklogd:10:90 klogd:11:90 kerneld:12:12 ppp:14:14 pcmcia:15:15 logoutd:20:20 makedev:20:20 atd:89:89 cron:89:11"
	# delete knoppix specific programs from runlevel directories
	# delete also knoppix-hd-config
	rm -f $TARGET_MNT_POINT/etc/rc[023456S].d/[SK]??{xsession,knoppix-autoconfig,knoppix-hd-config,knoppix-reboot,knoppix-halt}

	# start services wanted in config ...
	for i in $SERVICES_START; do
		chroot_it update-rc.d $i defaults								&>/dev/null
	done
	
	### initscripts ###
	# create basic system runlevel
	#
	#       Okay, we could do this with update-rc.d, but that would probably
	#       be pretty slow. This way we win some speed.
	#       DO NOT FOLLOW THIS EXAMPLE IN OTHER PACKAGES.
	#
	if [ -x $TARGET_MNT_POINT/etc/init.d/mountvirtfs ]; then
		chroot_it update-rc.d mountvirtfs	start 2 S . start 36 S .				&>/dev/null
		# XXX: workaround for broken update-rc.d
		chroot_it ln -sf ../init.d/mountvirtfs /etc/rcS.d/S02mountvirtfs
		for i in devpts.sh mountkernfs; do
		        if [ -f $TARGET_MNT_POINT/etc/init.d/$i ]; then
				rm -f $TARGET_MNT_POINT/etc/init.d/$i
				chroot_it update-rc.d $i remove							&>/dev/null
			fi
		done
	elif [ -x $TARGET_MNT_POINT/etc/init.d/mountkernfs ]; then
		chroot_it update-rc.d mountkernfs	start 36 S .						&>/dev/null
	else
		chroot_it update-rc.d devpts.sh start 36 S . &>/dev/null
	fi
	chroot_it update-rc.d bootlogd		start 5 S .							&>/dev/null
	chroot_it update-rc.d checkroot.sh	start 10 S .							&>/dev/null
	chroot_it update-rc.d modutils		start 20 S .							&>/dev/null
	chroot_it update-rc.d checkfs.sh	start 30 S .							&>/dev/null
	chroot_it update-rc.d mountall.sh	start 35 S .							&>/dev/null
	chroot_it update-rc.d hostname.sh	start 40 S .							&>/dev/null
	chroot_it update-rc.d network		start 40 S .							&>/dev/null
	chroot_it update-rc.d mountnfs.sh	start 45 S .							&>/dev/null
	chroot_it update-rc.d bootmisc.sh	start 55 S .							&>/dev/null
	chroot_it update-rc.d urandom		start 55 S . start 30 0 6 .					&>/dev/null
	#
	#       Links in "normal" runlevels.
	#
	chroot_it update-rc.d sendsigs		start 20 0 6 .							&>/dev/null
	chroot_it update-rc.d umountnfs.sh	start 31 0 6 .							&>/dev/null
	chroot_it update-rc.d umountfs		start 40 0 6 .							&>/dev/null
	chroot_it update-rc.d umountroot	start 60 0 6 .							&>/dev/null
	chroot_it update-rc.d halt		start 90 0 .							&>/dev/null
	chroot_it update-rc.d reboot		start 90 6 .							&>/dev/null
	chroot_it update-rc.d rmnologin		start 99 2 3 4 5 .						&>/dev/null
	chroot_it update-rc.d single		start 20 1 .							&>/dev/null
	chroot_it update-rc.d stop-bootlogd	start 99 2 3 4 5 .						&>/dev/null

	### console-tools ###	
	chroot_it update-rc.d console-screen.sh start 48 S .							&>/dev/null

	### pppconfig ###
	chroot_it update-rc.d dns-clean		start 39 S .							&>/dev/null

	### util-linux ###
	chroot_it update-rc.d hwclock.sh	start 50 S . stop 25 0 6 .					&>/dev/null
	chroot_it update-rc.d hwclockfirst.sh	start 22 S .							&>/dev/null
	
	### ifupdown ###
	chroot_it update-rc.d ifupdown		start 39 S . start 36 0 6 .					&>/dev/null
	chroot_it update-rc.d ifupdown-clean	start 18 S .							&>/dev/null
	
	### initrd-tools ###	
	chroot_it update-rc.d initrd-tools.sh	start 05 S .							&>/dev/null

	### isapnptools ###
	chroot_it update-rc.d isapnp		start 15 S .							&>/dev/null

	### console-common ###
	chroot_it update-rc.d keymap.sh		start 05 S .							&>/dev/null

	### module-init-tools ###
	chroot_it update-rc.d module-init-tools	start 20 S .							&>/dev/null

	### netbase ###
	chroot_it update-rc.d networking	start 40 S . start 35 0 6 .					&>/dev/null
	
	### portmap ###
	#chroot_it update-rc.d portmap		start 43 S . start 32 0 6 . start 18 2 3 4 5 . stop 81 1 .	&>/dev/null

	### ppp ###
	chroot_it update-rc.d ppp		start 14 2 3 4 5 . stop 86 0 1 6 .				&>/dev/null
	chroot_it update-rc.d pppd-dns		start 38 S .							&>/dev/null

	### procps ###
	chroot_it update-rc.d procps.sh		start 30 S .							&>/dev/null

	### setserial ###
	chroot_it update-rc.d etc-setserial	start 30 S . stop 30 0 6 .					&>/dev/null
	chroot_it update-rc.d setserial		start 46 S . stop 19 0 6 .					&>/dev/null

	# Start hotplug
	chroot_it update-rc.d hotplug		start 40 S .							&>/dev/null
	chroot_it update-rc.d hotplug-net	start 41 S . stop 89 0 6 .					&>/dev/null

	# udev
	chroot_it update-rc.d udev		start 04 S .							&>/dev/null
	chroot_it update-rc.d udev-mtab		start 36 S .							&>/dev/null

	# dbus-1
	chroot_it update-rc.d dbus-1		defaults							&>/dev/null

	# Add default scripts to runlevels
	for i in $SYSTEM_SERVICES_D; do
		SYSTEM_SERVICE=$(echo $i | cut -d: -f1)
		SYSTEM_START=$(echo $i | cut -d: -f2)
		SYSTEM_STOP=$(echo $i | cut -d: -f3)
		chroot_it update-rc.d $SYSTEM_SERVICE defaults $SYSTEM_START $SYSTEM_STOP			&>/dev/null
	done

	# start automounter
	chroot_it update-rc.d -f autofs remove									&>/dev/null
	chroot_it update-rc.d autofs defaults									&>/dev/null

	# Display Manager "korrekt" starten - also nur im Runlevel 5
	#	(das gilt aber auch eigentlich nur für nicht-debian Systeme ;-))
	
	for DM in kdm xdm gdm; do
		if [ -e "$TARGET_MNT_POINT/etc/init.d/$DM" ]; then
	 		chroot_it update-rc.d -f $DM	remove							&>/dev/null
	 		chroot_it update-rc.d $DM	start 99 5 . stop 1 0 1 2 3 4 6 .			>/dev/null
		fi
	done

	# PCMCIA ausschalten, wenn nicht nötig

	grep -q pcmcia /proc/devices || chroot_it update-rc.d -f pcmcia remove >/dev/null 2>/dev/null
	
	# ACPI Anpassung

	[ -d /proc/acpi -a -x /etc/init.d/acpid ] && chroot_it update-rc.d acpid defaults >/dev/null

	# Startuplinks einfrieren

	[ -x /usr/sbin/freeze-rc.d ] && chroot_it freeze-rc.d

	# system_add_services # started by the different modes
}

system_install_keymap()
{
	[ -f /etc/sysconfig/keyboard ] && source /etc/sysconfig/keyboard

	# Add correct keymap (thx to Joerg Schirottke)
	[ -n "$KEYTABLE" ] && chroot_it install-keymap "$KEYTABLE" 2>/dev/null
}

system_install_i18n()
{
	# Environment korrekt setzen

	if [ -e "$TARGET_MNT_POINT/etc/sysconfig/i18n" ]; then
		source "$TARGET_MNT_POINT/etc/sysconfig/i18n"
		echo LANG=$LANG >> "$TARGET_MNT_POINT/etc/environment"
		if [ "$LANG" == "el_GR" ]; then
			echo LANGUAGE=$(echo $LANG|perl -pe '($_)=/(..)/') >> "$TARGET_MNT_POINT/etc/environment"
	  		echo LC_ALL=$LANG >> "$TARGET_MNT_POINT/etc/environment"
	 	fi

		# Add localisation for kde3
		
		 cat << EOF >> $TARGET_MNT_POINT/etc/kde3/system.kdeglobals
[Locale]
Charset=$CHARSET
Country=$COUNTRY
Language=$LANGUAGE
EOF

		# Add localisation for kdm
		# (Language could be commented out)
		perl -pi -e "s/#Language=.*/Language=$LANGUAGE/g" $TARGET_MNT_POINT/etc/kde3/kdm/kdmrc
		perl -pi -e "s/Language=.*/Language=$LANGUAGE/g" $TARGET_MNT_POINT/etc/kde3/kdm/kdmrc
	fi
}

# Everything needed for hw-detection

system_create_modules()
{
	# create device symlink /dev/mouse ( normally done by hwsetup )
	cp -a /dev/mouse $TARGET_MNT_POINT/dev/

	# create /etc/modules from current loaded modules
	cat <<EOF >$TMP
# /etc/modules: kernel modules to load at boot time.
#
# This file should contain the names of kernel modules that are
# to be loaded at boot time, one per line.  Comments begin with
# a '#', and everything on the line after them are ignored.
EOF

	BLACKLIST=$(cut -f1 -d' ' /lib/modules/$(uname -r)/modules.usbmap|sort|uniq|perl -pe 's/#\n//;s/\n/|/g')"cloop|snd|radeon|fsam7400|capi|hisax|fcpci|fcdsl|ieee80211|slam|unionfs|dri"
	cat /proc/modules | tac | grep -v '\[.*\]' | egrep -v "$BLACKLIST" |
	while read mod x; do
		if [ $mod = apm ]; then
			echo "apm power_off=1" >>$TMP
		elif [ $mod = sbp2 ]; then
			echo "sbp2 serialize_io=1" >>$TMP
		else
			echo $mod >>$TMP
		fi
	done

	WHITELIST="ipw2100|ipw2200"
	cat /proc/modules | tac | grep -v '\[.*\]' | egrep "$WHITELIST" |
	while read mod x; do
		echo $mod >>$TMP
	done

	cp -f $TMP $TARGET_MNT_POINT/etc/modules
	
	# for the future :-)
	cp -f $TMP $TARGET_MNT_POINT/etc/modules-$(uname -r) 
	
	# Also save /etc/sysconfig/
	mkdir -p $TARGET_MNT_POINT/etc/sysconfig/$(uname -r)
	cp -f /etc/sysconfig/{i18n,keyboard,desktop,knoppix,netcard,mouse,sound,xserver,floppy} $TARGET_MNT_POINT/etc/sysconfig/$(uname -r)/ 2>/dev/null # silence messages
	cp -f /etc/X11/XF86Config* $TARGET_MNT_POINT/etc/sysconfig/$(uname -r)/ 2>/dev/null # silence messages
	
	# add DMA activation to bootmisc.sh (commented out if nodma is set)
	if [ "$INSTALL_KANO" = "no" ]; then
		x=""
		checkbootparam nodma && x='#'
		echo "# enable DMA" >>$TARGET_MNT_POINT/etc/init.d/bootmisc.sh
		if [ -f /proc/partitions ]; then
			while read x x x p x; do
			    	case "$p" in
			    		hd?)
						[ -r "/proc/ide/$p/media" ] && echo "$x /sbin/hdparm -qd1 /dev/$p" >>$TARGET_MNT_POINT/etc/init.d/bootmisc.sh
						;;
				esac
			done < /proc/partitions
		fi
	fi
	
	# Run fix-cdrom at boottime
	if [ -x $TARGET_MNT_POINT/usr/sbin/fix-cdrom ]; then
		echo "# detect CDROMs" >>$TARGET_MNT_POINT/etc/init.d/bootmisc.sh
		echo "[ -x /usr/sbin/fix-cdrom ] && /usr/sbin/fix-cdrom" >>$TARGET_MNT_POINT/etc/init.d/bootmisc.sh
	fi

	# load snd, if ALSA is present
	[ -e /proc/asound/modules ] && echo modprobe snd-card-0 >>$TARGET_MNT_POINT/etc/init.d/bootmisc.sh
}

system_update_files()
{
	# update /etc/motd
	echo -e $"Welcome to Kanotix" "(Kernel $(uname -r))\n" > $TARGET_MNT_POINT/etc/motd

	cat <<EOF >$TARGET_MNT_POINT/etc/hosts
127.0.0.1	$HOST_NAME localhost

# The following lines are desirable for IPv6 capable hosts
# (added automatically by netbase upgrade)

::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts
EOF

	echo "$HOST_NAME" > $TARGET_MNT_POINT/etc/hostname
	echo "$HOST_NAME" > $TARGET_MNT_POINT/etc/mailname
	
	# create "real" /tmp with mode 1777
	rm -f $TARGET_MNT_POINT/tmp 2>/dev/null
	mkdir -p $TARGET_MNT_POINT/tmp
	chmod 1777 $TARGET_MNT_POINT/tmp

	# create /etc/mtab as a regular file
	rm -f $TARGET_MNT_POINT/etc/mtab
	touch $TARGET_MNT_POINT/etc/mtab

	# For us users use an us-mirror
	case "$LANGUAGE" in
		us*)
			#perl -pi -e "s/ftp2.de.debian.org/ftp.uk.debian.org/" $TARGET_MNT_POINT/etc/apt/sources.list
			:
		;;
	esac
}

system_fix_menus()
{
	[ -d $TARGET_MNT_POINT/usr/share/applnk/Knoppix ] && suknoppixmenus $TARGET_MNT_POINT/usr/share/applnk/Knoppix kdesu

	for i in `egrep -l -r -e '(xcdroast|ethereal|kbackup)' /usr/share/applications/. /usr/share/applnk/. /var/lib/menu-xdg/applications/menu-xdg/.`; do
        	perl -pi -e 's|Exec=sudo /|Exec=/|g' "$TARGET_MNT_POINT$i"
	done

	# Replace sudo (does not work from hd) by kdesu (does)
	for i in `grep -l -r 'Exec=sudo -H ' /usr/share/applications/. /usr/share/applnk/. /var/lib/menu-xdg/applications/menu-xdg/.`; 	do
        	perl -pi -e 's|Exec=sudo -H |Exec=kdesu -- |g' "$TARGET_MNT_POINT$i"
	done

	chroot_it update-menus

	# Fix also qtparted / parted / ...
	# -- Disabled as paths did change
	#perl -pi -e "s/Exec=/Exec=kdesu -- /g" $TARGET_MNT_POINT/usr/share/applnk/System/qtparted.desktop
	#perl -pi -e 's|Exec=sudo -H |Exec=su-to-root -X -c |g' /usr/lib/menu/qtparted
	#perl -pi -e 's|Exec=sudo -H |Exec=su-to-root -X -c |g' /usr/share/applications/qtparted.desktop
	#perl -pi -e "s/Exec=/Exec=su -c /g" $TARGET_MNT_POINT/usr/share/applnk/System/Partition_Image.desktop
}

